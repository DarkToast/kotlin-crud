apiVersion: apps/v1
kind: Deployment
metadata:
  name: iot-deployment
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2        # how many pods we can add at a time
      maxUnavailable: 1  # how many pods can be unavailable during the rolling update
  selector:
    matchLabels:
      app: iot-pod
  template:
    metadata:
      labels:
        app: iot-pod
    spec:
      containers:
        - name: iot
          image: iot-image-stream:latest
          env:
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres-db-pguser-iot
                  key: user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-db-pguser-iot
                  key: password
            - name: DB_CONNECTION
              valueFrom:
                secretKeyRef:
                  name: postgres-db-pguser-iot
                  key: jdbc-uri
          ports:
            - name: app-port
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /admin/status
              port: 8080
              initialDelaySeconds: 60
              periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /admin/health
              port: 8080
              initialDelaySeconds: 60
              periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: iot-service
spec:
  selector:
    app: iot-pod
  ports:
    - name: app-port
      protocol: TCP
      port: 8080       # The port that the service is running on in the cluster
      targetPort: 8080 # The port exposed by the service
  type: NodePort
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: iot-route
spec:
  to:
    kind: Service
    name: iot-service
    weight: 100
  port:
    targetPort: app-port
